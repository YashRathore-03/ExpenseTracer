{"ast":null,"code":"// client/src/redux/slices/expenseSlice.js\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport expenseService from '../services/expenseService';\nconst initialState = {\n  expenses: [],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n};\n\n// Create new expense\nexport const createExpense = createAsyncThunk('expenses/create', async (expenseData, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.user.token;\n    return await expenseService.createExpense(expenseData, token);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Get user expenses\nexport const getExpenses = createAsyncThunk('expenses/getAll', async (_, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.user.token;\n    return await expenseService.getExpenses(token);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Update expense\nexport const updateExpense = createAsyncThunk('expenses/update', async ({\n  id,\n  expenseData\n}, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.user.token;\n    return await expenseService.updateExpense(id, expenseData, token);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Delete expense\nexport const deleteExpense = createAsyncThunk('expenses/delete', async (id, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.user.token;\n    return await expenseService.deleteExpense(id, token);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const expenseSlice = createSlice({\n  name: 'expenses',\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.isError = false;\n      state.message = '';\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(createExpense.pending, state => {\n      state.isLoading = true;\n    }).addCase(createExpense.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.expenses.push(action.payload);\n    }).addCase(createExpense.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    }).addCase(getExpenses.pending, state => {\n      state.isLoading = true;\n    }).addCase(getExpenses.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.expenses = action.payload;\n    }).addCase(getExpenses.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    }).addCase(updateExpense.pending, state => {\n      state.isLoading = true;\n    }).addCase(updateExpense.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.expenses = state.expenses.map(expense => expense._id === action.payload._id ? action.payload : expense);\n    }).addCase(updateExpense.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    }).addCase(deleteExpense.pending, state => {\n      state.isLoading = true;\n    }).addCase(deleteExpense.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.expenses = state.expenses.filter(expense => expense._id !== action.payload.id);\n    }).addCase(deleteExpense.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    });\n  }\n});\nexport const {\n  reset\n} = expenseSlice.actions;\nexport default expenseSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","expenseService","initialState","expenses","isError","isSuccess","isLoading","message","createExpense","expenseData","thunkAPI","token","getState","auth","user","error","response","data","toString","rejectWithValue","getExpenses","_","updateExpense","id","deleteExpense","expenseSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","push","payload","rejected","map","expense","_id","filter","actions","reducer"],"sources":["C:/Users/91620/Downloads/Expense-Tracker/client/src/redux/slices/expenseSlice.js"],"sourcesContent":["// client/src/redux/slices/expenseSlice.js\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport expenseService from '../services/expenseService';\r\n\r\nconst initialState = {\r\n  expenses: [],\r\n  isError: false,\r\n  isSuccess: false,\r\n  isLoading: false,\r\n  message: '',\r\n};\r\n\r\n// Create new expense\r\nexport const createExpense = createAsyncThunk(\r\n  'expenses/create',\r\n  async (expenseData, thunkAPI) => {\r\n    try {\r\n      const token = thunkAPI.getState().auth.user.token;\r\n      return await expenseService.createExpense(expenseData, token);\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\n// Get user expenses\r\nexport const getExpenses = createAsyncThunk(\r\n  'expenses/getAll',\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      const token = thunkAPI.getState().auth.user.token;\r\n      return await expenseService.getExpenses(token);\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\n// Update expense\r\nexport const updateExpense = createAsyncThunk(\r\n  'expenses/update',\r\n  async ({ id, expenseData }, thunkAPI) => {\r\n    try {\r\n      const token = thunkAPI.getState().auth.user.token;\r\n      return await expenseService.updateExpense(id, expenseData, token);\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\n// Delete expense\r\nexport const deleteExpense = createAsyncThunk(\r\n  'expenses/delete',\r\n  async (id, thunkAPI) => {\r\n    try {\r\n      const token = thunkAPI.getState().auth.user.token;\r\n      return await expenseService.deleteExpense(id, token);\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const expenseSlice = createSlice({\r\n  name: 'expenses',\r\n  initialState,\r\n  reducers: {\r\n    reset: (state) => {\r\n      state.isLoading = false;\r\n      state.isSuccess = false;\r\n      state.isError = false;\r\n      state.message = '';\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(createExpense.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(createExpense.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.expenses.push(action.payload);\r\n      })\r\n      .addCase(createExpense.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n      })\r\n      .addCase(getExpenses.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getExpenses.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.expenses = action.payload;\r\n      })\r\n      .addCase(getExpenses.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n      })\r\n      .addCase(updateExpense.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(updateExpense.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.expenses = state.expenses.map((expense) =>\r\n          expense._id === action.payload._id ? action.payload : expense\r\n        );\r\n      })\r\n      .addCase(updateExpense.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n      })\r\n      .addCase(deleteExpense.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(deleteExpense.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.expenses = state.expenses.filter(\r\n          (expense) => expense._id !== action.payload.id\r\n        );\r\n      })\r\n      .addCase(deleteExpense.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset } = expenseSlice.actions;\r\nexport default expenseSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}